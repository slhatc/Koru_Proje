@using Dtos;
@model CustomerAddModel
@{
    ViewData["Title"] = "Add Customer";
}

<form asp-action="Add" asp-controller="Customer" method="post">

    <div class="form-group">
        <label asp-for="CustomerAddDto.Name">İsim</label>
        <input asp-for="CustomerAddDto.Name" type="text" class="form-control" placeholder="İsmi giriniz.." required>
    </div>
    <div class="form-group">
        <label asp-for="CustomerAddDto.Email">Email</label>
        <input asp-for="CustomerAddDto.Email" type="text" class="form-control" placeholder="E-posta" required>
    </div>
    <div class="form-group">
        <label asp-for="CustomerAddDto.Phone">Telefon</label>
        <input asp-for="CustomerAddDto.Phone" type="text" class="form-control" placeholder="Telefon" required>
    </div>


    <div class="form-group">
        <label asp-for="CustomerAddDto.AddressId">Adres</label>
        @if (Model.Addresses.Addresses?.Count == 0)
        {
            <a asp-action="Add" asp-controller="Address"><p>Lütfen Önce Adres ekleyeniz</p></a>
             <select class="form-control" required asp-for="CustomerAddDto.AddressId" hidden>

            </select>
        }
        else
        {
            <select class="form-control" required asp-for="CustomerAddDto.AddressId">

                <option value="">Seçiniz</option>
                @foreach (var item in Model.Addresses.Addresses)
                {
                    <option value="@item.Id">@item.AddressName</option>
                }

            </select>
        }

        <div class="invalid-feedback">Example invalid custom select feedback</div>
    </div>
    <br />

    <button type="submit" class="btn btn-primary">Ekle</button>

</form>